[
  {
    "objectID": "posts/Obesity Risk/Obesity.html",
    "href": "posts/Obesity Risk/Obesity.html",
    "title": "Food categories that poses obesity risks",
    "section": "",
    "text": "📰 News 💻 Code and Visualization 📈 Data Storytelling"
  },
  {
    "objectID": "posts/Obesity Risk/Obesity.html#explore-the-story-by-category",
    "href": "posts/Obesity Risk/Obesity.html#explore-the-story-by-category",
    "title": "Food categories that poses obesity risks",
    "section": "Explore the Story by Category",
    "text": "Explore the Story by Category\n\n📰 News\nObesity is a major global health concern, often driven by poor eating habits like consuming processed foods, sugary drinks, and large portions. These behaviors lead to excess fat buildup and increase the risk of serious conditions such as diabetes, heart disease, and certain cancers. Emotional eating and late-night snacking further contribute to unhealthy weight gain. Sedentary lifestyles combined with poor diets worsen the situation. Combating obesity requires promoting balanced nutrition, physical activity, and mindful eating habits.\n\n\n\n💻 Code and Visualization\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\nlibrary(stringr)\nlibrary(forcats)\nlibrary(ggtext)\nlibrary(gt)\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n# Load your dataset\nncf &lt;- read_excel(\"NCF.xlsx\")\n\n\n# Clean column names \ncolnames(ncf) &lt;- c(\"SN\", \"CPC_Code\", \"Commodity\", \"Calories\", \"Protein\", \"Fats\", \"Category\")\n\n# Ensure data is numeric\nncf &lt;- ncf %&gt;%\n  mutate(across(c(Calories, Protein, Fats), as.numeric)) %&gt;%\n  drop_na(Calories, Protein, Fats)\n\n# Remove NA values and check for duplicates\nncf_clean &lt;- ncf %&gt;%\n  distinct() %&gt;%\n  drop_na()\n\n# View(ncf_clean)\nanyNA(ncf)\n\n[1] FALSE\n\nanyNA(ncf_clean)\n\n[1] FALSE\n\n## Categorize Foods into Low, Medium, and High Calorie Classes\n\n# Define custom calorie levels based on your specified thresholds\nncf_clean &lt;- ncf_clean %&gt;%\n  mutate(Calorie_Level = case_when(\n    Calories &gt;= 10 & Calories &lt;= 100 ~ \"Low\",\n    Calories &gt;= 201 & Calories &lt;= 500 ~ \"Medium\",\n    Calories &gt;= 501 & Calories &lt;= 950 ~ \"High\",\n    TRUE ~ NA_character_  # For calories outside defined ranges\n  ))\n\n# Summary stats per food category\ncategory_summary &lt;- ncf_clean %&gt;%\n  group_by(Category) %&gt;%\n  summarise(\n    Avg_Calories = mean(Calories, na.rm = TRUE),\n    Avg_Protein = mean(Protein, na.rm = TRUE),\n    Avg_Fats = mean(Fats, na.rm = TRUE),\n    Median_Calories = median(Calories, na.rm = TRUE),\n    SD_Calories = sd(Calories, na.rm = TRUE),\n    Count = n()\n  ) %&gt;%\n  arrange(Avg_Calories)\n\nprint(category_summary)\n\n# A tibble: 13 × 7\n   Category  Avg_Calories Avg_Protein Avg_Fats Median_Calories SD_Calories Count\n   &lt;chr&gt;            &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;           &lt;dbl&gt;       &lt;dbl&gt; &lt;int&gt;\n 1 Beverages         88.3       4.54    0.0385             56         74.8    13\n 2 Fruits            97.8       1.27    1.64               58         88.3    65\n 3 Vegetabl…        106.        2.30    6.03               29        213.     35\n 4 Roots & …        192.        1.92    0.35              110.       127.     18\n 5 Processe…        219.        5.91    4.92              261        163.     24\n 6 Spices &…        284.        9.23    9.29              323        102.      9\n 7 Animal P…        299.       12.2    25.0               170        274.    102\n 8 Sweetene…        308.        0.153   0.0133            344        110.     15\n 9 Cereals …        316.       12.4     6.1               344.       152.     62\n10 Legumes …        331.       16.8    18.4               340.       242.     30\n11 Fish & S…        472         3.15   50.2               472        608.      2\n12 Nuts & S…        548.       10.9    51.3               567        239.     53\n13 Oils & F…        809.        0.138  91.4               884        158.      8\n\n# Create GT table\ncategory_summary %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = md(\"**Nutritional Summary by Food Category**\"),\n    subtitle = \"Mean, Median and Standard Deviation of Calories, Protein, and Fats\"\n  ) %&gt;%\n  fmt_number(\n    columns = c(Avg_Calories, Avg_Protein, Avg_Fats, Median_Calories, SD_Calories),\n    decimals = 1\n  ) %&gt;%\n  cols_label(\n    Category = \"Food Category\",\n    Avg_Calories = \"Avg Calories (kcal)\",\n    Avg_Protein = \"Avg Protein (g)\",\n    Avg_Fats = \"Avg Fats (g)\",\n    Median_Calories = \"Median Calories\",\n    SD_Calories = \"SD Calories\",\n    Count = \"No. of Foods\"\n  ) %&gt;%\n  tab_source_note(\n    source_note = md(\"**Data Source:** National Food Balance Sheets Report (2014–2017), NBS-Zanzibar | Created by: *ichi data solutions*\")\n  ) %&gt;%\n  opt_table_font(font = list(google_font(\"Open Sans\"), default_fonts()))\n\n\n\n\n\n\n\nNutritional Summary by Food Category\n\n\nMean, Median and Standard Deviation of Calories, Protein, and Fats\n\n\nFood Category\nAvg Calories (kcal)\nAvg Protein (g)\nAvg Fats (g)\nMedian Calories\nSD Calories\nNo. of Foods\n\n\n\n\nBeverages\n88.3\n4.5\n0.0\n56.0\n74.8\n13\n\n\nFruits\n97.8\n1.3\n1.6\n58.0\n88.3\n65\n\n\nVegetables\n106.3\n2.3\n6.0\n29.0\n212.7\n35\n\n\nRoots & Tubers\n191.9\n1.9\n0.3\n109.5\n127.3\n18\n\n\nProcessed Foods\n219.1\n5.9\n4.9\n261.0\n162.8\n24\n\n\nSpices & Herbs\n284.4\n9.2\n9.3\n323.0\n101.8\n9\n\n\nAnimal Products\n298.6\n12.2\n25.0\n170.0\n274.4\n102\n\n\nSweeteners\n307.8\n0.2\n0.0\n344.0\n110.1\n15\n\n\nCereals & Grains\n315.5\n12.4\n6.1\n343.5\n152.0\n62\n\n\nLegumes & Pulses\n331.1\n16.8\n18.4\n339.5\n241.9\n30\n\n\nFish & Seafood\n472.0\n3.1\n50.2\n472.0\n608.1\n2\n\n\nNuts & Seeds\n548.4\n10.9\n51.3\n567.0\n239.0\n53\n\n\nOils & Fats\n808.6\n0.1\n91.4\n884.0\n157.7\n8\n\n\n\nData Source: National Food Balance Sheets Report (2014–2017), NBS-Zanzibar | Created by: ichi data solutions\n\n\n\n\n\n\n\n# Step 1: Define updated risk classification table with emoji-enhanced categories\nrisk_metadata &lt;- tribble(\n  ~Category,             ~Calorie_Range,     ~Risk_Level,              ~Notes,                                       ~Label,\n  \"Oils & Fats\",         \"400 – 900+\",       \"High risk\",              \"Very energy dense\",                          \"🧈 Oils & Fats\",\n  \"Nuts & Seeds\",        \"400 – 700+\",       \"High risk\",              \"Energy dense; often high in fat\",            \"🥜 Nuts & Seeds\",\n  \n  \"Fish & Seafood\",      \"50 – 200\",         \"Moderate to high risk\",  \"Lean proteins but watch portion sizes\",      \"🐟 Fish & Seafood\",\n  \"Legumes & Pulses\",    \"100 – 300\",        \"Moderate to high risk\",  \"Good protein/fiber balance\",                 \"🌱 Legumes & Pulses\",\n  \"Cereals & Grains\",    \"100 – 350\",        \"Moderate to high risk\",  \"Carb-rich; portion control\",                 \"🌾 Cereals & Grains\",\n  \"Sweeteners\",          \"300 – 900+\",       \"Moderate to high risk\",  \"High sugar content\",                         \"🍬 Sweeteners\",\n  \n  \"Animal Products\",     \"100 – 400+\",       \"Moderate risk\",          \"Watch fatty cuts and dairy fats\",            \"🥩 Animal Products\",\n  \"Spices & Herbs\",      \"0 – 300\",          \"Moderate risk\",          \"Salt/spice overload\",                        \"🌶️ Spices & Herbs\",\n  \"Processed Foods\",     \"300 – 920+\",       \"Moderate risk\",          \"High fat, sugar, processed ingredients\",     \"🥫 Processed Foods\",\n  \n  \"Roots & Tubers\",      \"50 – 150\",         \"Low risk\",               \"Starchy but generally safe\",                 \"🥔 Roots & Tubers\",\n  \"Vegetables\",          \"10 – 100\",         \"Low risk\",               \"Nutrient-dense and safe\",                    \"🥦 Vegetables\",\n  \n  \"Fruits\",              \"30 – 250\",         \"Lower risk\",             \"Sugary fruits in moderation\",                \"🍎 Fruits\",\n  \"Beverages\",           \"0 – 150\",          \"Lower risk\",             \"Mostly low-cal drinks\",                      \"🥤 Beverages\"\n)\n\n# Step 2: Summarize average nutrient content per category\ncategory_summary &lt;- ncf_clean %&gt;%\n  group_by(Category) %&gt;%\n  summarise(\n    Avg_Calories = mean(Calories, na.rm = TRUE),\n    Avg_Protein = mean(Protein, na.rm = TRUE),\n    Avg_Fats = mean(Fats, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  left_join(risk_metadata, by = \"Category\")\n\n# Step 3: Plot with emoji-labeled categories\nggplot(category_summary, aes(x = fct_reorder(Label, Avg_Calories), y = Avg_Calories, fill = Risk_Level)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = paste0(round(Avg_Calories, 1), \" kcal\")), hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  scale_fill_manual(values = c(\n    \"Lower risk\"             = \"#1a9850\",   # Dark green\n    \"Low risk\"               = \"#66bd63\",   # Medium green\n    \"Moderate risk\"          = \"#fee08b\",   # Yellow\n    \"Moderate to high risk\"  = \"#f46d43\",   # Orange\n    \"High risk\"              = \"#d73027\"    # Red\n  )) +\n  labs(\n    title = \"Food Categories and Their Obesity Risk if Consumed Excessively\",\n    subtitle = \"Higher average calories per 100g reflect increased potential for weight gain\",\n    x = \"Food Category\",\n    y = \"Average Calories (kcal/100g)\",\n    caption = \"Data Source: National Food Balance Sheets Report 2014–2017 (NBS-Zanzibar)\\nVisualization: ichi data solutions\"\n  ) +\n  theme_void() +\n  theme(\n    axis.text.y = element_markdown(size = 11),\n    plot.title = element_markdown(face = \"bold\", size = 14),\n    plot.subtitle = element_markdown(size = 11),\n    plot.caption = element_markdown(size = 9, face = \"italic\"),\n    legend.position = \"bottom\"\n  ) +\n  ylim(0, max(category_summary$Avg_Calories, na.rm = TRUE) + 50)\n\n\n\n\n\n\n\n\n\n\n📈 Data Storytelling\n\n🥣 What Your Plate Is Hiding\nMany people unknowingly eat foods that quietly harm their health. A review of 400+ foods shows the highest-calorie items often lack nutritional value. For example, Oils & Fats average 808 kcal with over 91g of fat, while Nuts & Seeds and Fish & Seafood follow with high calorie and fat content.\nIn contrast, vegetables, fruits, and beverages are low in calories and fats yet often under-consumed. Even “healthy” foods like legumes and cereals can be calorie-dense if not portioned mindfully.\nThe message is clear: Calories don’t equal nutrition. By reducing oil, processed foods, and sweeteners and choosing vegetables more often we can improve our health without sacrificing taste."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ichi Data Solutions",
    "section": "",
    "text": "Decline of Freedom of Speech\n\n\n\n\n\n\n\n\n\n\n\nJun 15, 2025\n\n\nChristmore Setebe | ichidata solutions\n\n\n\n\n\n\n\n\n\n\n\n\nFood categories that poses obesity risks\n\n\n\n\n\n\n\n\n\n\n\nJun 15, 2025\n\n\nChristmore Setebe | ichidata solutions\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello and welcome to this blog !\nMy name is Christmore Setebe I go by the brand name Ichi data Solutions , I’m a passionate Data Enthusiast specializing in data analysis and visualization across a wide spectrum of domains. The guiding principle that shapes my approach to transforming raw data into meaningful insights goes by the moto:\nInterpret, Communicate, Highlight, Influence thus abbriviated as ichi\nIn this blog you will find several posts where you’ll discover intuitive data analyses and compelling data stories designed to illuminate patterns, provoke thought, and support data-driven decision-making. Whether you’re a fellow analyst, a decision-maker, or someone curious about the power of data, I invite you to join me on this exciting journey through the world of data.\nLet’s explore, learn, and influence together — one insight at a time."
  },
  {
    "objectID": "posts/Freedom of speech/Speech.html",
    "href": "posts/Freedom of speech/Speech.html",
    "title": "Decline of Freedom of Speech",
    "section": "",
    "text": "📰 News 💻 Code and Visualization 📈 Data Storytelling"
  },
  {
    "objectID": "posts/Freedom of speech/Speech.html#explore-the-story-by-category",
    "href": "posts/Freedom of speech/Speech.html#explore-the-story-by-category",
    "title": "Decline of Freedom of Speech",
    "section": "Explore the Story by Category",
    "text": "Explore the Story by Category\n\n📰 News\nIn recent years, many countries have seen a sharp decline in freedom of speech. This decline reflects growing authoritarianism, limitations on press freedom, internet censorship, and persecution of journalists and citizens expressing dissenting views.\nThis visualization highlights 15 countries that have experienced significant declines between 2014 and 2024.\nThese trends raise concerns about democratic backsliding and the erosion of civil liberties, especially in countries categorized as Not Free and Partly Free.\n\n\n\n💻 Code and Visualization\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(forcats)\nlibrary(tidyr)\nlibrary(ggtext)\n\n# Original data\ndf &lt;- data.frame(\n  Country = c(\"Nicaragua\", \"Tunisia\", \"El Salvador\", \"Tanzania\", \"Niger\",\n              \"Hong Kong\", \"Serbia\", \"Türkiye\", \"Venezuela\", \"Benin\",\n              \"Burkina Faso\", \"Mali\", \"Afghanistan\", \"Myanmar\", \"Burundi\"),\n  \n  ISO2 = c(\"ni\", \"tn\", \"sv\", \"tz\", \"ne\",\n           \"hk\", \"rs\", \"tr\", \"ve\", \"bj\",\n           \"bf\", \"ml\", \"af\", \"mm\", \"bi\"),\n  \n  Status = c(\"Not Free\", \"Partly Free\", \"Partly Free\", \"Not Free\", \"Not Free\",\n             \"Partly Free\", \"Partly Free\", \"Not Free\", \"Not Free\", \"Partly Free\",\n             \"Not Free\", \"Not Free\", \"Not Free\", \"Not Free\", \"Not Free\"),\n  \n  Decline_2014_2024 = c(-40, -35, -28, -28, -26,\n                        -25, -24, -22, -22, -21,\n                        -20, -20, -18, -18, -17),\n  \n  Score_2024 = c(14, 44, 47, 35, 30,\n                 40, 56, 33, 13, 60,\n                 25, 24, 6, 7, 15)\n)\n\ndf$flag_url &lt;- paste0(\"https://flagcdn.com/w40/\", df$ISO2, \".png\")\n\ndf$Country_with_flag &lt;- paste0(\n  \"&lt;span style='display:inline-block; width:28px;'&gt;&lt;img src='\", df$flag_url, \n  \"' width='20' valign='middle'&gt;&lt;/span&gt;\", \n  \"&lt;span style='vertical-align:middle;'&gt; \", df$Country, \"&lt;/span&gt;\"\n)\n\ndf_long &lt;- df %&gt;%\n  select(Country, Country_with_flag, Status, Decline_2014_2024, Score_2024) %&gt;%\n  pivot_longer(cols = c(Decline_2014_2024, Score_2024),\n               names_to = \"Metric\",\n               values_to = \"Value\") %&gt;%\n  mutate(\n    Metric = recode(Metric, \n                    Decline_2014_2024 = \"DECLINE IN 2014 - 2024\", \n                    Score_2024 = \"SCORE AT 2024\"),\n    fill_factor = Status\n  )\n\ndf_long &lt;- df_long %&gt;%\n  mutate(Country_with_flag = fct_reorder(Country_with_flag, Value, .fun = min, .desc = TRUE))\n\nfill_colors &lt;- c(\n  \"Not Free\" = \"#d73027\",\n  \"Partly Free\" = \"#636363\"\n)\n\nggplot(df_long, aes(x = Country_with_flag, y = Value, fill = fill_factor)) +\n  geom_col(show.legend = TRUE) +\n  geom_text(aes(label = Value), \n            position = position_stack(vjust = 0.5), size = 3, color = \"white\") +\n  coord_flip() +\n  scale_fill_manual(\n    values = fill_colors,\n    breaks = c(\"Not Free\", \"Partly Free\"),\n    labels = c(\"Not Free\", \"Partly Free\"),\n    guide = guide_legend(title = NULL)\n  ) +\n  facet_wrap(~ Metric, scales = \"free_x\", nrow = 1) +\n  labs(\n    title = \"Where Speech Became Less Free\",\n    subtitle = \"Countries with drops in freedom of speech from 2014 to 2024\",\n    x = NULL,\n    y = \"Score / Decline\",\n    caption = \"Source: Global Data Summit | Visualization: © 2025 ichidataviz\",\n    fill = NULL\n  ) +\n  theme_void(base_size = 18) +\n  theme(\n    axis.text.y = ggtext::element_markdown(),\n    plot.title = element_text(face = \"bold\"),\n    axis.ticks.y = element_blank(),\n    strip.text = element_text(face = \"bold\", size = 18),\n    panel.spacing = unit(2, \"lines\"),\n    legend.position = \"top\",\n    plot.caption = element_text(size = 12, hjust = 0, vjust = 0),\n    plot.caption.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\n\n📈 Data Storytelling\n\n\nFreedom of Expression Is in Decline\nOver the past decade, many countries have seen a significant drop in their freedom of expression scores. The sharpest decline is observed in Nicaragua, which fell by 40 points. Countries like Burundi and Myanmar also rank among the lowest in 2024.\nThis visualization shows two things:\n\nHow much each country has declined over 10 years\nWhat their current freedom score is in 2024\n\nBy combining both views, we can easily see which countries were already struggling and have worsened, and which ones have fallen from better positions.\nThe use of flags and status colors (e.g., Not Free, Partly Free) makes the message clear at a glance."
  }
]